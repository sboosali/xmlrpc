cabal-version:       2.2

----------------------------------------

name:                xmlrpc-examples
version:             0.0.0

----------------------------------------

synopsis:
        @xmlrpc@ examples

description:
            Examples for the @xmlrpc@ package.

category: Example, RPC, XML, Network 

----------------------------------------

build-type:          Simple
homepage:            http://github.com/sboosali/xmlrpc#readme
bug-reports:         http://github.com/sboosali/xmlrpc/issues
author:              Spiros Boosalis
maintainer:          Spiros Boosalis <samboosalis@gmail.com>
copyright:           2018 Spiros Boosalis
license:             
license-file:        LICENSE
stability:           experimental
tested-with:
  -- GHC == 7.10.3
  -- GHC == 8.0.2
  -- GHC == 8.2.2
     GHC == 8.4.3
  -- GHC == 8.6.1

----------------------------------------

extra-source-files:
  README.md
  LICENSE

-- data-files:
--   data/

----------------------------------------

source-repository head
  type:     git
  location: git://github.com/sboosali/xmlrpc.git
  subdir:   examples

----------------------------------------
-- FLAGS

-- flag ...
--   default:     False
--   description: Enable ...
--   manual:      True

----------------------------------------
-- COMMON_STANZAS
----------------------------------------
common haskell2020

 build-depends:
  base >=4.8 && <5.0
  -- ^ all components must agree on `base`.
  -- by sharing this `build-depends` fragment,
  -- across components, via this `common` stanza,
  -- we both guarantee it and make it more convenience.

 default-language:
   Haskell2010

 ------------------------------
 ------------------------------
 ghc-options:

  --------------------
  -- warning groups
  --------------------

  -Wall

  --------------------
  -- disabled warnings
  --------------------

  -Wno-unticked-promoted-constructors

  --------------------
  -- enabled warnings
  --------------------

  -- enable
  -Wincomplete-uni-patterns
  -Wincomplete-record-updates
  -Widentities
  -Wmissing-methods
  -fwarn-tabs
 
  --------------------
  -- typed-holes
  --------------------

  -- use `typed-holes`, not `undefined`, during development

  -fdefer-typed-holes
  -Wtyped-holes

  --------------------
  -- (miscellaneous warnings)
  --------------------

  -- raise a warning into an error
  -- -Werror=missing-fields

 if impl(ghc >= 8.0)
    ghc-options:

        --------------------
        -- warning groups
        --------------------     

        -Wcompat
      
        --------------------
        -- enabled warnings
        --------------------

        -Wnoncanonical-monad-instances
        -Wnoncanonical-monadfail-instances

 ------------------------------
 ------------------------------

 default-extensions:

   --------------------
   -- "controversial"
   --------------------
   NoImplicitPrelude

   --------------------
   -- `deriving`
   --------------------
   AutoDeriveTypeable
   DeriveDataTypeable
   DeriveGeneric
   DeriveFunctor
   DeriveFoldable
   DeriveTraversable
   DeriveLift
   StandaloneDeriving

   DerivingStrategies
   DeriveAnyClass
   GeneralizedNewtypeDeriving

   --------------------
   -- syntax
   --------------------
   PackageImports
   LambdaCase
   EmptyCase
   TypeOperators
   PostfixOperators
   BangPatterns
   KindSignatures
   NamedFieldPuns
   RecordWildCards
   TupleSections
   MultiWayIf
   DoAndIfThenElse
   EmptyDataDecls
   InstanceSigs
   
   --------------------
   -- typeclasses
   --------------------
   MultiParamTypeClasses
   FlexibleContexts
   FlexibleInstances
   TypeFamilies
   FunctionalDependencies

   --------------------
   -- patterns
   --------------------
   ViewPatterns
   PatternSynonyms

   --------------------
   -- (miscellaneous)
   --------------------
   ScopedTypeVariables

 other-extensions:

   --------------------
   -- macros
   --------------------
   TemplateHaskell
   -- QuasiQuotes

   --------------------
   -- syntax (of literals)
   --------------------
   OverloadedStrings
   OverloadedLists

   --------------------
   -- (miscellaneous)
   --------------------

   -- RebindableSyntax
   -- kinds:
   -- DataKinds ConstraintKinds
   -- harmful to inference:
   -- GADTs RankNTypes
   -- (miscellaneous)

--------------------------------------------------
-- EXECUTABLES
--------------------------------------------------

executable xmlrpc-example-simple
 import: haskell2020

 ghc-options: -Wno-missing-signatures
 
 main-is:        Main.hs
 hs-source-dirs: simple
 
 build-depends:
               xmlrpc

--------------------------------------------------

executable xmlrpc-example-person
 import: haskell2020

 ghc-options: -Wno-missing-signatures
 
 main-is:        Main.hs
 hs-source-dirs: person
 
 build-depends:
               xmlrpc

--------------------------------------------------

executable xmlrpc-example-introspect
 import: haskell2020

 ghc-options: -Wno-missing-signatures
 
 main-is:        Main.hs
 hs-source-dirs: introspect
 
 build-depends:
               xmlrpc

--------------------------------------------------

executable xmlrpc-example-official
 import: haskell2020

 ghc-options: -Wno-missing-signatures
 
 main-is:        Main.hs
 hs-source-dirs: official
 
 build-depends:
               xmlrpc

--------------------------------------------------